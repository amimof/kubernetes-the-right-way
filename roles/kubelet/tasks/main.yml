- name: Determine IP address of one master
  shell: "dig {{ groups['nodes'][0] }} +short"
  register: result
  failed_when: (result.rc != 0 or result.stdout == "") and cluster_ip is undefined
  delegate_to: 127.0.0.1

- set_fact:
    cluster_ip: "{{ cluster_ip | default(result.stdout) }}"
    cluster_hostname: "{{ cluster_hostname | default(groups['nodes'][0]) }}"
    cluster_port: "{{ cluster_port | default('6443') }}"

- set_fact:
    config_path: "{{ config_path | default(ansible_env.HOME+'/.ktrw') }}"
  delegate_to: 127.0.0.1

- set_fact:
    cluster_name: "{{ cluster_hostname.split('.')[0] | default('kubernetes') }}"

- set_fact:
    cluster_config_path: "{{ config_path }}/{{ cluster_name }}"

- name: Download kubelet
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.11.2/bin/linux/amd64/kubelet
    dest: /usr/local/bin/kubelet
    mode: 0755
    owner: root
    group: root

- name: Ensure directories exist
  file:
    state: directory
    path: "/etc/kubernetes/{{ item }}"
    mode: 0755
  with_items:
    - pki
    - config

- name: Copy certificates
  copy:
    src: "{{ item }}"
    dest: /etc/kubernetes/pki
  with_fileglob:
    - "{{ cluster_config_path }}/pki/node/system:node:{{ ansible_fqdn }}*"
    - "{{ cluster_config_path }}/pki/master/ca.pem"

- name: Create kubelet kubeconfig
  command: "kubectl config set-cluster kubernetes --certificate-authority {{ cluster_config_path }}/pki/master/ca.pem --embed-certs=true --server=https://{{ cluster_hostname }}:{{ cluster_port }} --kubeconfig {{ cluster_config_path }}/system:node:{{ ansible_fqdn }}.kubeconfig"
  delegate_to: 127.0.0.1

- name: set-credentials 
  command: "kubectl config set-credentials system:node:{{ ansible_hostname }} --client-certificate {{ cluster_config_path }}/pki/node/system:node:{{ ansible_fqdn }}.pem --client-key {{ cluster_config_path }}/pki/node/system:node:{{ ansible_fqdn }}-key.pem --embed-certs=true --kubeconfig {{ cluster_config_path }}/system:node:{{ ansible_fqdn }}.kubeconfig"
  delegate_to: 127.0.0.1
 
- name: set-context
  command: "kubectl config set-context default --cluster=kubernetes --user=system:node:{{ ansible_hostname }} --kubeconfig {{ cluster_config_path }}/system:node:{{ ansible_fqdn }}.kubeconfig"
  delegate_to: 127.0.0.1
 
- name: use-context
  command: "kubectl config use-context default --kubeconfig {{ cluster_config_path }}/system:node:{{ ansible_fqdn }}.kubeconfig"
  delegate_to: 127.0.0.1

- name: Copy kubeconfig
  copy:
    src: "{{ cluster_config_path }}/system:node:{{ ansible_fqdn }}.kubeconfig"
    dest: /etc/kubernetes/config/system:node:{{ ansible_fqdn }}.kubeconfig

- name: Create systemd unit file
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service

- name: daemon-reload
  systemd: 
    daemon_reload: True

- name: Start and enable kubelet
  systemd:
    name: kubelet
    state: restarted
    enabled: True