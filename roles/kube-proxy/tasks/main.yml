---
- set_fact:
    cluster_hostname: "{{ cluster_hostname | default(groups['masters'][0]) }}"
    cluster_port: "{{ cluster_port | default('6443') }}"

- set_fact:
    config_path: "{{ config_path | default(lookup('env','HOME')+'/.ktrw') }}"
  delegate_to: 127.0.0.1

- set_fact:
    cluster_name: "{{ cluster_name | default(cluster_hostname.split('.')[0] | default('kubernetes')) }}"

- set_fact:
    cluster_config_path: "{{ config_path }}/{{ cluster_name }}"

- name: Download kube-proxy
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.20.6/bin/linux/amd64/kube-proxy
    dest: /usr/local/bin/kube-proxy
    mode: 0755
    owner: root
    group: root
    checksum: sha256:b64375f805dec9540078f3295e77bfa339227b6c3b2b63bd4239d0c4eaf0254e
  notify:
    - restart kube-proxy

- name: Ensure directories exist
  file:
    state: directory
    path: "/etc/kubernetes/{{ item }}"
    mode: 0755
  with_items:
    - pki
    - config

- name: Copy certificates
  copy:
    src: "{{ item }}"
    dest: /etc/kubernetes/pki
  with_items:
    - "{{ cluster_config_path }}/pki/master/ca.pem"
    - "{{ cluster_config_path }}/pki/master/kube-proxy.pem"
    - "{{ cluster_config_path }}/pki/master/kube-proxy-key.pem"
  notify:
    - restart kube-proxy

- name: Create kubeconfig
  template:
    src: kube-proxy.kubeconfig
    dest: "/etc/kubernetes/config/kube-proxy.kubeconfig"
  vars:
    certificate_authority_data: "{{ lookup('file', cluster_config_path+'/pki/master/ca.pem') | b64encode }}"
    client_certificate_data: "{{ lookup('file', cluster_config_path+'/pki/master/kube-proxy.pem') | b64encode }}"
    client_key_data: "{{ lookup('file', cluster_config_path+'/pki/master/kube-proxy-key.pem') | b64encode }}"
  notify:
    - restart kube-proxy

- name: Copy kube-proxy config
  copy:
    src: kube-proxy.yml
    dest: /etc/kubernetes/config/
  notify:
    - restart kube-proxy

- name: Create systemd unit file
  template:
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service
  notify:
    - restart kube-proxy

- name: daemon-reload
  systemd: 
    name: kube-proxy
    daemon_reload: True
    enabled: True
  notify:
    - restart kube-proxy
