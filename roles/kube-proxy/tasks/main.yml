---
- set_fact:
    cluster_hostname: "{{ cluster_hostname | default(groups['masters'][0]) }}"
    cluster_port: "{{ cluster_port | default('6443') }}"

- set_fact:
    config_path: "{{ config_path | default(lookup('env','HOME')+'/.ktrw') }}"
  delegate_to: 127.0.0.1

- set_fact:
    cluster_name: "{{ cluster_name | default(cluster_hostname.split('.')[0] | default('kubernetes')) }}"

- set_fact:
    cluster_config_path: "{{ config_path }}/{{ cluster_name }}"

- name: Download kube-proxy
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.13.1/bin/linux/amd64/kube-proxy
    dest: /usr/local/bin/kube-proxy
    mode: 0755
    owner: root
    group: root

- name: Ensure directories exist
  file:
    state: directory
    path: "/etc/kubernetes/{{ item }}"
    mode: 0755
  with_items:
    - pki
    - config

- name: Copy certificates
  copy:
    src: "{{ item }}"
    dest: /etc/kubernetes/pki
  with_items:
    - "{{ cluster_config_path }}/pki/master/ca.pem"
    - "{{ cluster_config_path }}/pki/master/kube-proxy.pem"
    - "{{ cluster_config_path }}/pki/master/kube-proxy-key.pem"

- name: Create kube-proxy kubeconfig
  command: "kubectl config set-cluster kubernetes --certificate-authority /etc/kubernetes/pki/ca.pem --embed-certs=true --server=https://{{ cluster_hostname }}:{{ cluster_port }} --kubeconfig /etc/kubernetes/config/kube-proxy.kubeconfig"

- name: set-credentials 
  command: "kubectl config set-credentials system:kube-proxy --client-certificate /etc/kubernetes/pki/kube-proxy.pem --client-key /etc/kubernetes/pki/kube-proxy-key.pem --embed-certs=true --kubeconfig /etc/kubernetes/config/kube-proxy.kubeconfig"
 
- name: set-context
  command: "kubectl config set-context default --cluster=kubernetes --user=system:kube-proxy --kubeconfig /etc/kubernetes/config/kube-proxy.kubeconfig"
 
- name: use-context
  command: "kubectl config use-context default --kubeconfig /etc/kubernetes/config/kube-proxy.kubeconfig"

- name: Copy kube-proxy config
  copy:
    src: kube-proxy.yml
    dest: /etc/kubernetes/config/

- name: Create systemd unit file
  template:
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service

- name: daemon-reload
  systemd: 
    daemon_reload: True

- name: Start and enable kube-proxy
  systemd:
    name: kube-proxy
    state: restarted
    enabled: True