---
- name: Determine IP address of one master
  shell: "dig {{ groups['masters'][0] }} +short"
  register: result
  delegate_to: 127.0.0.1

- set_fact:
    cluster_ip: "{{ cluster_ip | default(result.stdout) }}"
    cluster_hostname: "{{ cluster_hostname | default(groups['masters'][0]) }}"
    cluster_port: "{{ cluster_port | default('6443') }}"
    config_path: "{{ config_path | default(ansible_env.HOME+'/.ktrw') }}"
    regenerate_certificates: "{{ regenerate_certificates | default(False) }}"
    regenerate_keys: "{{ regenerate_keys | default(False) }}"

- set_fact:
    cluster_name: "{{ cluster_hostname.split('.')[0] | default('kubernetes') }}"

- set_fact:
    cluster_config_path: "{{ config_path }}/{{ cluster_name }}"

- set_fact:
    cluster_config_path: "{{ cluster_config_path }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['all'] }}"

- name: Ensure tmp directories exist
  file:
    state: directory
    path: "{{ cluster_config_path }}/{{ item }}"
    mode: 0755
  with_items:
    - config
    - pki/master
    - pki/etcd
    - pki/node

- name: Create openssl config
  template:
    src: openssl.conf.j2
    dest: "{{ cluster_config_path }}/config/openssl.conf"

- name: Generate private keys
  openssl_privatekey:
    path: "{{ cluster_config_path }}/pki/{{ item }}-key.pem"
    size: 2048
    force: "{{ regenerate_keys }}"
  with_items:
    - master/ca
    - master/apiserver
    - master/admin
    - master/etcd
    - master/service-account
    - master/kube-controller-manager
    - master/kube-scheduler
    - master/kube-proxy
    - master/kubelet-peer
    - etcd/ca
    - etcd/etcd
    - etcd/peer 

- name: Change file permissions for private keys 
  file:
    path: "{{ item }}"
    mode: 0600
  with_fileglob:
    - "{{ cluster_config_path }}/pki/master/*-key.pem"

- name: Change file permissions for etcd private keys 
  file:
    path: "{{ item }}"
    mode: 0600
  with_fileglob:
    - "{{ cluster_config_path }}/pki/etcd/*-key.pem"

# CA Certificate
- stat: 
    path: "{{ cluster_config_path }}/pki/master/ca.pem"
  register: result
- name: Generate CA cert
  shell: "openssl req -x509 -new -sha256 -nodes -key {{ cluster_config_path }}/pki/master/ca-key.pem -days 1826 -out {{ cluster_config_path }}/pki/master/ca.pem -subj '/CN=kubernetes-ca/C=SE/L=Gothenburg/O=Kubernetes/OU=CA/ST=Vastra Gotalands Lan' -extensions v3_ca -config {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# etcd CA certificate
- stat: 
    path: "{{ cluster_config_path }}/pki/etcd/ca.pem"
  register: result
- name: Generate etcd CA cert
  shell: "openssl req -x509 -new -sha256 -nodes -key {{ cluster_config_path }}/pki/etcd/ca-key.pem -days 1826 -out {{ cluster_config_path }}/pki/etcd/ca.pem -subj '/CN=etcd-ca/C=SE/L=Gothenburg/O=Kubernetes/OU=CA/ST=Vastra Gotalands Lan' -extensions v3_ca -config {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# kube-apiserver certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/apiserver.pem"
  register: result
- name: Generate apiserver cert
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/master/apiserver-key.pem -subj '/CN=kube-apiserver/C=SE/L=Gothenburg/O=Kubernetes/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/apiserver.pem -days 1826 -extensions v3_req_apiserver -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# kubelet peer certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/kubelet-peer.pem"
  register: result
- name: Generate kubelet-peer cert
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/master/kubelet-peer-key.pem -subj '/CN=kubelet-peer/C=SE/L=Gothenburg/O=system:masters/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/kubelet-peer.pem -days 1826 -extensions v3_req_client -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# Admin certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/admin.pem"
  register: result
- name: Generate admin cert
  shell: "openssl req -new -key {{ cluster_config_path }}/pki/master/admin-key.pem -subj '/CN=Kubernetes/C=SE/L=Gothenburg/O=system:masters/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/admin.pem -days 1826 -extensions v3_req_client -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# kube-controller-manage certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/kube-controller-manager.pem"
  register: result
- name: Generate kube-controller-manager cert
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/master/kube-controller-manager-key.pem -subj '/CN=system:kube-controller-manager/C=SE/L=Gothenburg/O=system:kube-controller-manager/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/kube-controller-manager.pem -days 1826 -extensions v3_req_client -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# kube-scheduler certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/kube-scheduler.pem"
  register: result
- name: Generate kube-scheduler cert
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/master/kube-scheduler-key.pem -subj '/CN=system:kube-scheduler/C=SE/L=Gothenburg/O=system:kube-scheduler/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/kube-scheduler.pem -days 1826 -extensions v3_req_client -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# kube-proxy certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/kube-proxy.pem"
  register: result
- name: Generate kube-proxy cert 
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/master/kube-proxy-key.pem -subj '/CN=system:kube-proxy/C=SE/L=Gothenburg/O=system:node-proxier/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/kube-proxy.pem -days 1826 -extensions v3_req_client -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# service-account certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/master/service-account.pem"
  register: result
- name: Generate service-account cert 
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/master/service-account-key.pem -subj '/CN=service-accounts/C=SE/L=Gothenburg/O=Kubernetes/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/master/service-account.pem -days 1826 -extensions v3_req_client -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# etcd certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/etcd/etcd.pem"
  register: result
- name: Generate etcd cert
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/etcd/etcd-key.pem -subj '/CN=etcd/C=SE/L=Gothenburg/O=Kubernetes/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/etcd/ca.pem -CAkey {{ cluster_config_path }}/pki/etcd/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/etcd/etcd.pem -days 1826 -extensions v3_req_etcd -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

# etcd-peer certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/etcd/peer.pem"
  register: result
- name: Generate etcd-peer cert
  shell: "openssl req -new -sha256 -key {{ cluster_config_path }}/pki/etcd/peer-key.pem -subj '/CN=etcd-peer/C=SE/L=Gothenburg/O=Kubernetes/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/etcd/ca.pem -CAkey {{ cluster_config_path }}/pki/etcd/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/etcd/peer.pem -days 1826 -extensions v3_req_etcd -extfile {{ cluster_config_path }}/config/openssl.conf"
  when: not result.stat.exists or regenerate_certificates

- name: Generate node private keys
  openssl_privatekey:
    path: "{{ cluster_config_path }}/pki/node/system:node:{{ item }}-key.pem"
    size: 2048
    force: "{{ regenerate_keys }}"
  with_items: "{{ groups['nodes'] }}"

- name: Determine IP address of nodes
  shell: "dig {{ item }} +short"
  with_items: "{{ groups['nodes'] }}"
  register: nodes_ip_result

# kubelet certificates
- stat: 
    path: "{{ cluster_config_path }}/pki/node/system:node:{{ item }}.pem"
  register: result
  with_items: "{{ groups['nodes'] }}"
- name: Generate node certs
  shell: "openssl req -new -key {{ cluster_config_path }}/pki/node/system:node:{{ item.1 }}-key.pem -subj '/CN=system:node:{{ hostvars[item.1].inventory_hostname_short }}/C=SE/L=Gothenburg/O=system:nodes/OU=amimof/ST=Vastra Gotalands Lan' | openssl x509 -req -sha256 -CA {{ cluster_config_path }}/pki/master/ca.pem -CAkey {{ cluster_config_path }}/pki/master/ca-key.pem -CAcreateserial -out {{ cluster_config_path }}/pki/node/system:node:{{ item.1 }}.pem -days 1826 -extfile <(printf 'subjectAltName=DNS.1:{{ hostvars[item.1].inventory_hostname_short }},DNS.2:{{ hostvars[item.1].inventory_hostname }},IP.1:{{ nodes_ip_result.results[item.0].stdout }}\nbasicConstraints=CA:FALSE\nkeyUsage=critical,digitalSignature,keyEncipherment\nextendedKeyUsage=clientAuth,serverAuth')"
  with_indexed_items: "{{ groups['nodes'] }}"
  when: not result.results[item.0].stat.exists or regenerate_certificates
  args:
    executable: /bin/bash

- name: Create admin kubeconfig
  shell: "kubectl config set-cluster {{ cluster_name }} --certificate-authority {{ cluster_config_path }}/pki/master/ca.pem --embed-certs=true --server=https://{{ cluster_hostname }}:{{ cluster_port }} --kubeconfig ~/.kube/config"

- name: set-credentials 
  shell: "kubectl config set-credentials {{ cluster_name }} --client-certificate {{ cluster_config_path }}/pki/master/admin.pem --client-key {{ cluster_config_path }}/pki/master/admin-key.pem --embed-certs=true --kubeconfig ~/.kube/config"

- name: set-context 
  shell: "kubectl config set-context {{ cluster_name }} --cluster={{ cluster_name }} --user={{ cluster_name }} --kubeconfig ~/.kube/config"

- name: use-context 
  shell: "kubectl config use-context {{ cluster_name }} --kubeconfig ~/.kube/config"

