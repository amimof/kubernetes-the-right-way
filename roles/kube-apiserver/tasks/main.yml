---
- setup:
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['etcd'] }}"

- set_fact:
    cluster_port: "{{ cluster_port | default('6443') }}"
    cluster_hostname: "{{ cluster_hostname | default(groups['masters'][0]) }}"
    flags_apiserver: "{{ flags_apiserver | default([]) }}"

- set_fact:
    config_path: "{{ config_path | default(lookup('env','HOME')+'/.ktrw') }}"
  delegate_to: 127.0.0.1

- set_fact:
    cluster_name: "{{ cluster_name | default(cluster_hostname.split('.')[0] | default('kubernetes')) }}"

- set_fact:
    cluster_config_path: "{{ config_path }}/{{ cluster_name }}"

- name: Download kube-apiserver
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.15.10/bin/linux/amd64/kube-apiserver
    dest: /usr/local/bin/kube-apiserver
    mode: 0755
    owner: root
    group: root
    checksum: sha256:fe614de445063aa5d7903eb7a8fe973f84668ed1d300f81cea42fa5c85b5c967
  notify:
    - restart kube-apiserver

- name: Ensure directories exist
  file:
    state: directory
    path: "/etc/kubernetes/{{ item }}"
    mode: 0755
  with_items:
    - pki
    - config

- name: Copy certificates
  copy:
    src: "{{ item }}"
    dest: /etc/kubernetes/pki
  with_items:
    - "{{ cluster_config_path }}/pki/master/ca.pem"
    - "{{ cluster_config_path }}/pki/master/service-account-key.pem"
    - "{{ cluster_config_path }}/pki/master/apiserver.pem"
    - "{{ cluster_config_path }}/pki/master/apiserver-key.pem"
    - "{{ cluster_config_path }}/pki/master/kubelet-peer.pem"
    - "{{ cluster_config_path }}/pki/master/kubelet-peer-key.pem"
  notify:
    - restart kube-apiserver

- name: Ensure directories exist
  file:
    state: directory
    path: "/etc/etcd/{{ item }}"
    mode: 0755
  with_items:
    - pki

- name: Copy etcd certificates
  copy:
    src: "{{ item }}"
    dest: /etc/etcd/pki
  with_items:
    - "{{ cluster_config_path }}/pki/etcd/ca.pem"
    - "{{ cluster_config_path }}/pki/etcd/etcd.pem"
    - "{{ cluster_config_path }}/pki/etcd/etcd-key.pem"
  notify:
    - restart kube-apiserver

- name: Copy encryption-config
  copy:
    src: encryption-config.yml
    dest: /etc/kubernetes/config
  notify:
    - restart kube-apiserver

- name: Create systemd unit file
  template:
    src: kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
  notify:
    - restart kube-apiserver

- name: daemon-reload
  systemd: 
    name: kube-apiserver
    daemon_reload: True
    enabled: True
  notify:
    - restart kube-apiserver
